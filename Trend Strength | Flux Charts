// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © fluxchart

//@version=5

indicator("Trend Strength | Flux Charts", overlay = true, max_boxes_count = 500)

detectionLength = input.int(14, "Detection Length", group = "General Configuration", tooltip = "This setting determines the amount of candlesticks the indicator will look for trend detection. Higher settings may help the indicator find longer trends, while lower settings will help with finding smaller trends.", display = display.none)
smoothing = input.int(10, "Smoothing", group = "General Configuration", minval = 1, tooltip = "Higher settings will result in longer periods of time required for trend to change direction from bullish to bearish and vice versa.", display = display.none)
EMA1Length = input.int(9, "EMA Lengths          ", group = "General Configuration", inline = "1", display = display.none)
EMA2Length = input.int(21, "", group = "General Configuration", inline = "1", display = display.none)
labelEnabled = input.bool(true, "Labels", group = "General Configuration", inline = "label", display = display.none)
//labelPos     = input.string("Above", "", group = "General Configuration", options = ["Above", "Below"], inline = "label", display = display.none)
//showPreviousLabels = input.bool(false, "Show Previous Labels", group = "General Configuration", display = display.none)
showPreviousLabels = labelEnabled

bearishColor = input.color(#f23646, "Bearish", group = "Colors", inline = "col", display = display.none)
neutralColor = input.color(color.gray, "Neutral", group = "Colors", inline = "col", display = display.none)
bullishColor = input.color(#089981, "Bullish", group = "Colors", inline = "col", display = display.none)
textColor    = input.color(color.white, "Text    ", group = "Colors", inline = "col2", display = display.none)

if EMA1Length >= EMA2Length
    runtime.error("First EMA Length must be lower than second EMA Length")

const int minLabelDistance = 0
var int barsSinceLabel = 0

// 0.5, 0.2, 0.3

const float rsiEff = 0.5

const float supertrendFactor = 3.0
const float supertrendEff = 0.2

float emaATRRange = (EMA2Length - EMA1Length) < 20 ? 1.6 : (EMA2Length - EMA1Length) < 50 ? 2 : 3
const float emaCrossEff = 0.3

var label trendLabel = na

f_lin_interpolate(float x0, float x1, float y0, float y1, float x) =>
    y0 + (x - x0) * (y1 - y0) / (x1 - x0)

atr = ta.atr(detectionLength)

curRSI = ta.rsi(close, detectionLength)
curRSI := f_lin_interpolate(15, 85, -100, 100, curRSI)

[supertrend, supDirection] = ta.supertrend(supertrendFactor, detectionLength)
curSupertrend = f_lin_interpolate(-1, 1, -100, 100, -supDirection)

ema1 = ta.ema(close, EMA1Length)
ema2 = ta.ema(close, EMA2Length)
//plot(ema1, color = color.red)
//plot(ema2, color = color.green)
emaDiff = ema1 - ema2
emaDiff := f_lin_interpolate(-atr * emaATRRange, atr * emaATRRange, -100, 100, emaDiff)

totalStrengthRaw = (curRSI * rsiEff) + (curSupertrend * supertrendEff) + (emaDiff * emaCrossEff)
totalStrength = ta.ema(totalStrengthRaw, smoothing)
//log.info(str.tostring(totalStrength))

curColor = color.from_gradient(totalStrength, -100, 0, bearishColor, neutralColor)
if totalStrength > 0
    curColor := color.from_gradient(totalStrength, 15, 85, neutralColor, bullishColor)
barcolor(curColor)

var oldTrendText = "■"
trendText = "■"
if totalStrength < -25
    trendText := "▼"
if totalStrength < -75
    trendText := "▼+"

if totalStrength > 25
    trendText := "▲"
if totalStrength > 75
    trendText := "▲+"

barsSinceLabel += 1

if barstate.isconfirmed
    if showPreviousLabels
        if trendText != oldTrendText and trendText != "■" and barsSinceLabel > minLabelDistance and str.contains(trendText, "+") == false
            barsSinceLabel := 0
            oldTrendText := trendText
            label.new(bar_index, close, trendText, yloc = totalStrength < 0 ? yloc.abovebar : yloc.belowbar, style = totalStrength < 0 ? label.style_label_down : label.style_label_up, color = curColor, textcolor = textColor)

if barstate.islast and labelEnabled
    label.delete(trendLabel)
    trendLabel := label.new(bar_index, close, trendText, yloc = totalStrength < 0 ? yloc.abovebar : yloc.belowbar, style = totalStrength < 0 ? label.style_label_down : label.style_label_up, color = curColor, textcolor = textColor)
